#!/usr/bin/env python

#------------------------------------------------------------------------------------------------------------------------
# INFO // 2021-11-04
#------------------------------------------------------------------------------------------------------------------------
# https://github.com/ricardojoserf/instagram-followers-bot
# https://github.com/zxllkada/Get-instagram-users-info---Any-instagram-account

#------------------------------------------------------------------------------------------------------------------------
# IMPORT
#------------------------------------------------------------------------------------------------------------------------
import aux_funcs, sys, json, time, random, json, os
import mysql.connector
from datetime import date
from InstagramAPI.InstagramAPI import InstagramAPI

followers = []
followings = []
args = aux_funcs.get_args()
api  = InstagramAPI(args.user, args.password)
#today = date.today()
today = "2021-11-17"

#------------------------------------------------------------------------------------------------------------------------
# Delay in seconds
#------------------------------------------------------------------------------------------------------------------------
min_delay = 5
max_delay = 10
MAXIMO = 100


#------------------------------------------------------------------------------------------------------------------------
# Colores
#------------------------------------------------------------------------------------------------------------------------
class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'


#------------------------------------------------------------------------------------------------------------------------
# Funciones
#------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------


#........................................................................................................................
# conexi√≥n BBDD
ConnectBBDD=mysql.connector.connect(
	host="localhost",
	user="test_python",
	passwd="pruebas",
	database="test_python")


#........................................................................................................................
# Mostramos el menu de ayuda para saber que se debe poner para cada una de las opciones
def printUsage():
	os.system('clear')
	print("Usage: \n python3 main.py -u USERNAME -p PASSWORD -o OPTIONS")
	print("\nOptions: ")
#       print(" - info \t\t\t\t\t: Muestra un reporte")
#       print(" - generate \t\t\t\t\t: Genera un reporte")
	print(" - siguiendo \t\t\t\t\t: Muestra a quien sigues")
	print(" - seguidores \t\t\t\t\t: Muestra quien te sigue")
#       print(" - nofollowback \t\t\t\t: Muestra quien no me sigue")
#       print(" - historicofollowers \t\t\t\t: Muestra quien te seguia en un dia concreto")
#       print(" - historicofollowing \t\t\t\t: Muestra a quien seguias en un dia concreto")
#       print(" - historicostats \t\t\t\t: Muestra un historico general")
	print("")


#........................................................................................................................
# Nos conectamos para sacar la informacion de los seguidores
def connectinsta():
	print("Conectando a Instagram")
	api.login()

	for i in api.getTotalSelfFollowers():
		followers.append(i.get("username") )

	for i in api.getTotalSelfFollowings():
		followings.append(i.get("username") )


#........................................................................................................................
# Reporte
def CheckReportStatus():
	ConnectReportStatus=ConnectBBDD.cursor()
	ConsultaSql = ConnectReportStatus.execute(
		"SELECT STATUS FROM resportstatus WHERE date = %s AND account = %s", (today, args.user)
	)
	ConsultaSql = str(ConnectReportStatus.fetchone())
	ConsultaSql = ConsultaSql[2]

	if(ConsultaSql == "1"):
		# Si existe el registro para el dia de doy, mostramos el reporte
		#os.system('clear')
		print("----..----")
	else:
		# Si no exite el registro, generamos el reporte.
		GetFollowInsta()


#........................................................................................................................
# Sacamos los followers/followings para insertarlos en la bbdd.
def GetFollowInsta():
	#connectinsta()

	# Followings
	print("Sacamos los followings") # EliminarLinea
	ConnectFollowings=ConnectBBDD.cursor()
	InsertFollowings="insert into followings(date, friendships, account) values (%s,%s,%s)"

	for account_following in followings:
		datos=(today, account_following, args.user)
		ConnectFollowings.execute(InsertFollowings, datos)

	# Followers
	print("Sacamos los followers") # EliminarLinea
	ConnectFollowers=ConnectBBDD.cursor()
	InsertFollowers="insert into followers(date, friendships, account) values (%s,%s,%s)"

	for account_follower in followers:
		datos=(today, account_follower, args.user)
		ConnectFollowers.execute(InsertFollowers, datos)

	# Status
	print("Insert status") # EliminarLinea
	ConnectReportStatus=ConnectBBDD.cursor()
	InsertStatusReport="insert into resportstatus(date, status, account) values (%s,%s,%s)"
	datos=(today, "1", args.user)
	ConnectReportStatus.execute(InsertStatusReport, datos)

	ConnectBBDD.commit()
	ConnectBBDD.close()


#........................................................................................................................
# Mostramos los FOLLOWERS
def ShowFollowers():
	TotalFollower = 0
	ConnectShowFollowers=ConnectBBDD.cursor()
	ConnectShowFollowers.execute(
		"SELECT friendships FROM followers WHERE date = %s AND account = %s", (today, args.user)
	)
	SqlShowFollowers = ConnectShowFollowers.fetchall()
	
	print(bcolors.OKGREEN + "Followers:" + bcolors.ENDC)
	for AccountFriendships in SqlShowFollowers:
		TotalFollower=TotalFollower+1
		print(str(TotalFollower) + ". " + str(*AccountFriendships))


#........................................................................................................................
# Mostramos los FOLLOWINGS
def ShowFollowings():
	TotalFollowing = 0
	ConnectShowFollowings=ConnectBBDD.cursor()
	ConnectShowFollowings.execute(
		"SELECT friendships FROM followings WHERE date = %s AND account = %s", (today, args.user)
	)
	SqlShowFollowings = ConnectShowFollowings.fetchall()
	
	print(bcolors.OKGREEN + "Followers:" + bcolors.ENDC)
	for AccountFriendships in SqlShowFollowings:
		TotalFollowing=TotalFollowing+1
		print(str(TotalFollowing) + ". " + str(*AccountFriendships))


#........................................................................................................................
# Mostramos los FOLLOWINGS Y FOLLOWERS
def ShowReport():
	print("")
	print("Reporte Generado: " + str(today))
	print("")
	ShowFollowings()
	print("")
	ShowFollowers()
	print("")


#........................................................................................................................
# Mostramos los NO FOLLOWBACK
def NoFollowBack():
	TotalNoFollowBack = 0
	print("")

	# Followings
	ConnectShowFollowings=ConnectBBDD.cursor()
	ConnectShowFollowings.execute(
		"SELECT friendships FROM followings WHERE date = %s AND account = %s", (today, args.user)
	)
	SqlShowFollowings = ConnectShowFollowings.fetchall()

	# Followers
	ConnectShowFollowers=ConnectBBDD.cursor()
	ConnectShowFollowers.execute(
		"SELECT friendships FROM followers WHERE date = %s AND account = %s", (today, args.user)
	)
	SqlShowFollowers = ConnectShowFollowers.fetchall()


	print(bcolors.OKGREEN + "No Followback:" + bcolors.ENDC)
	for AccountNoFollowBack in SqlShowFollowings:
		if AccountNoFollowBack not in SqlShowFollowers:
			TotalNoFollowBack=TotalNoFollowBack+1
			print(str(TotalNoFollowBack) + ". " + str(*AccountNoFollowBack))
	print("")





#------------------------------------------------------------------------------------------------------------------------
# Ejecucion
#------------------------------------------------------------------------------------------------------------------------
def main():
	option = args.option

	if(option == "info"):
		printUsage()

	elif(option == "reporte"):
		CheckReportStatus()
		ShowReport()
		

	elif(option == "followings"):
		CheckReportStatus()
		ShowFollowings()

	elif(option == "followers"):
		CheckReportStatus()
		ShowFollowers()
	
	elif(option == "nofollowback"):
		CheckReportStatus()
		NoFollowBack()
       
	elif(option == "help"):
		printUsage()

	else:
		printUsage()

if __name__ == "__main__":
		main()

